/**
 * –ö–ª–∞—Å—Å, –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * 
 * 
 */
export class Printer {
    constructor(styletext) {
        this.st = styletext
    }


    showError(error) {
        console.log(error.message)
    }

    helpMessageView() {
        console.log('- –ü–û–ú–û–©–¨ - –ü–û–ú–û–©–¨- –ü–û–ú–û–©–¨ - –ü–û–ú–û–©–¨- –ü–û–ú–û–©–¨ - –ü–û–ú–û–©–¨- –ü–û–ú–û–©–¨ - –ü–û–ú–û–©–¨')
    }

    showAllTasksView(array) {
        console.log(this.st(['bold', 'underline'], 'üìã –í—Å–µ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏:'));
        if (array.length === 0) {
            console.log(this.st('dim', '  ‚Äî –ó–∞–¥–∞—á –Ω–µ—Ç ‚Äî'));
            return;
        }
        array.forEach((task, index) => {
            const status = task.completed
                ? this.st(['green', 'bold'], '‚úì –°–¥–µ–ª–∞–Ω–æ')
                : this.st(['red', 'bold'], '‚úó –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');

            console.log(
                `  ${this.st(['yellow', 'bold'], `${index + 1}.`)} ${this.st('italic', task.text)}\n` +
                `  ‚îî‚îÄ‚îÄ –°—Ç–∞—Ç—É—Å: ${status}\n`
            );
        });
    }
}